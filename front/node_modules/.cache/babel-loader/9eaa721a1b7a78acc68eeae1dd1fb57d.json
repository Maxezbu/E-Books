{"ast":null,"code":"var _jsxFileName = \"/home/buru/resguardo/ebooks/front/src/components/Carrusel.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Button, Card, CardActions, CardContent, CardMedia, Container, Grid, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 180\n  },\n  container: {\n    display: \"flex\"\n  },\n  paper: {\n    margin: theme.spacing(1)\n  },\n  svg: {\n    width: 100,\n    height: 100\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1\n  }\n}));\nexport default function Carrusel({\n  card,\n  handleClick\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = () => {\n    setChecked(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grow, {\n      in: checked,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          style: {\n            padding: 20\n          },\n          image: card.imagen,\n          title: \"Image title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            children: card.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"PRECIO: $\", card.precio]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            color: \"primary\",\n            onClick: () => handleClick(card._id),\n            children: \"DETALLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grow, {\n      in: checked,\n      style: {\n        transformOrigin: \"0 0 0\"\n      },\n      ...(checked ? {\n        timeout: 1000\n      } : {})\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Carrusel, \"kk/cN5/LxShYtioAzfNg1QPS6v8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Carrusel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carrusel\");","map":{"version":3,"sources":["/home/buru/resguardo/ebooks/front/src/components/Carrusel.jsx"],"names":["React","makeStyles","Switch","Paper","Grow","FormControlLabel","Button","Card","CardActions","CardContent","CardMedia","Container","Grid","Typography","useStyles","theme","root","height","container","display","paper","margin","spacing","svg","width","polygon","fill","palette","common","white","stroke","divider","strokeWidth","Carrusel","card","handleClick","classes","checked","setChecked","useState","handleChange","prev","padding","imagen","titulo","precio","_id","transformOrigin","timeout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Container,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 180,\n  },\n  container: {\n    display: \"flex\",\n  },\n  paper: {\n    margin: theme.spacing(1),\n  },\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n}));\n\nexport default function Carrusel({ card, handleClick }) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Grow in={checked}>\n        <Card>\n          <CardMedia\n            style={{ padding: 20 }}\n            image={card.imagen}\n            title=\"Image title\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {card.titulo}\n            </Typography>\n            <Typography>PRECIO: ${card.precio}</Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => handleClick(card._id)}\n            >\n              DETALLE\n            </Button>\n          </CardActions>\n        </Card>\n        {/*   <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper> */}\n      </Grow>\n      {/* Conditionally applies the timeout prop to change the entry speed. */}\n      <Grow\n        in={checked}\n        style={{ transformOrigin: \"0 0 0\" }}\n        {...(checked ? { timeout: 1000 } : {})}\n      ></Grow>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}