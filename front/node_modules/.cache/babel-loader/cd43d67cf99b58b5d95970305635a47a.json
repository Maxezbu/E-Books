{"ast":null,"code":"import { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n/* \nexport const setComprar = createAsyncThunk(\"SET_COMPRAR\", (userId, productos) => {\n\n   return axios.put(`/api/carrito/${userId}`, {productos}).then((res) => res.data); \n}); */\n\nexport const setCarritoLogin = createAsyncThunk(\"SET_CARRITO_LOGIN\", ({\n  userId,\n  productos\n}) => {\n  console.log(productos);\n  return axios.post(`/api/carrito/${userId}`, {\n    productos\n  }).then(res => res.data);\n});\nexport const comprarReducer = createReducer([], {\n  /*   [setComprar.fulfilled]: (state, action) => action.payload, */\n  [setCarritoLogin.fulfilled]: (state, action) => action.payload\n});","map":{"version":3,"sources":["/home/diego/Documentos/Proyectos/e-commerce/front/src/state/comprar.js"],"names":["createReducer","createAsyncThunk","axios","setCarritoLogin","userId","productos","console","log","post","then","res","data","comprarReducer","fulfilled","state","action","payload"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,kBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAAC,mBAAD,EAAsB,CAAC;AAACG,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAyB;AACxFC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACF,SAAOH,KAAK,CAACM,IAAN,CAAY,gBAAeJ,MAAO,EAAlC,EAAqC;AAACC,IAAAA;AAAD,GAArC,EAAkDI,IAAlD,CAAwDC,GAAD,IAASA,GAAG,CAACC,IAApE,CAAP;AACD,CAH4C,CAAxC;AAKP,OAAO,MAAMC,cAAc,GAAGZ,aAAa,CAAC,EAAD,EAAK;AAChD;AACE,GAACG,eAAe,CAACU,SAAjB,GAA6B,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAFT,CAAL,CAApC","sourcesContent":["import { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n/* \nexport const setComprar = createAsyncThunk(\"SET_COMPRAR\", (userId, productos) => {\n\n   return axios.put(`/api/carrito/${userId}`, {productos}).then((res) => res.data); \n}); */\n\nexport const setCarritoLogin = createAsyncThunk(\"SET_CARRITO_LOGIN\", ({userId, productos}) => {\n      console.log(productos)\n    return axios.post(`/api/carrito/${userId}`, {productos}).then((res) => res.data);\n  });\n\nexport const comprarReducer = createReducer([], {\n/*   [setComprar.fulfilled]: (state, action) => action.payload, */\n  [setCarritoLogin.fulfilled]: (state, action) => action.payload,\n});\n"]},"metadata":{},"sourceType":"module"}